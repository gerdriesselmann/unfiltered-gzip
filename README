This is a GZip utility for Unfiltered (https://github.com/n8han/Unfiltered).

It offers a GZip intent you can use liek this:

object Echo extends unfiltered.filter.Plan {
  def intent = GZipIntent {
      case Path(Seg(p :: Nil)) => ResponseString(p)
  }
}

Additionally, GZipReponseString can be used as a drop in replacement for ResponseString, like this:

object Echo extends unfiltered.filter.Plan {
  def intent = {
      case req @ Path(Seg(p :: Nil)) => GZipResponseString(req, p)
  }
}

In both cases, it will be checked, if the client supports gzip encoding, and the required headers 
will be sent.


